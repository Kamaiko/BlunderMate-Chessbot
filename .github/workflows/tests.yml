name: Prolog Chess Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

# üõ°Ô∏è PROTECTION GLOBALE - Timeout job complet
jobs:
  test-suite:
    runs-on: ubuntu-latest
    container: swipl:latest
    timeout-minutes: 10  # üö® KILL SWITCH GLOBAL - Max 10 minutes total

    steps:
    - uses: actions/checkout@v4
      timeout-minutes: 2  # M√™me checkout peut tra√Æner

    - name: Verify SWI-Prolog installation
      timeout-minutes: 1
      run: |
        echo "=== TIMEOUT PROTECTION: 60s max ==="
        timeout 30s swipl --version || (echo "SWI-Prolog timeout!" && exit 1)

    - name: Debug - Show directory structure
      timeout-minutes: 1
      run: |
        echo "=== TIMEOUT PROTECTION: 60s max ==="
        timeout 30s bash -c '
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Test directory contents:"
          ls -la tests/
        ' || (echo "Directory listing timeout!" && exit 1)

    # üõ°Ô∏è NIVEAU 1: Tests rapides avec timeout strict
    - name: Run Chess Tests
      timeout-minutes: 2
      run: |
        echo "=== CHESS TESTS - Max 2min ==="
        timeout 90s swipl -s tests/tests.pl -g "run_tests, halt." || (echo "Chess tests timeout!" && exit 1)

    - name: Run Foundation Tests
      timeout-minutes: 1
      run: |
        echo "=== FOUNDATION TESTS - Max 1min ==="
        timeout 45s swipl -s tests/tests.pl -g "run_foundation_tests, halt." || (echo "Foundation tests timeout!" && exit 1)

    - name: Run Game Rules Tests
      timeout-minutes: 1
      run: |
        echo "=== GAME RULES TESTS - Max 1min ==="
        timeout 45s swipl -s tests/tests.pl -g "run_game_rules_tests, halt." || (echo "Game rules tests timeout!" && exit 1)

    # üõ°Ô∏è NIVEAU 2: Tests IA avec timeout plus long mais surveill√©
    - name: Run AI Algorithm Tests
      timeout-minutes: 3  # IA peut √™tre plus lente
      run: |
        echo "=== AI ALGORITHM TESTS - Max 3min ==="
        timeout 150s swipl -s tests/tests.pl -g "run_ai_algorithm_tests, halt." || (echo "AI algorithm tests timeout!" && exit 1)

    - name: Run AI Evaluation Tests
      timeout-minutes: 2
      run: |
        echo "=== AI EVALUATION TESTS - Max 2min ==="
        timeout 90s swipl -s tests/tests.pl -g "run_ai_evaluation_tests, halt." || (echo "AI evaluation tests timeout!" && exit 1)

    - name: Run Tactical Tests
      timeout-minutes: 2
      run: |
        echo "=== TACTICAL TESTS - Max 2min ==="
        timeout 90s swipl -s tests/tests.pl -g "run_tactical_tests, halt." || (echo "Tactical tests timeout!" && exit 1)

    - name: Run Robustness Tests
      timeout-minutes: 1
      run: |
        echo "=== ROBUSTNESS TESTS - Max 1min ==="
        timeout 45s swipl -s tests/tests.pl -g "run_robustness_tests, halt." || (echo "Robustness tests timeout!" && exit 1)

    - name: Run Integration Tests
      timeout-minutes: 2
      run: |
        echo "=== INTEGRATION TESTS - Max 2min ==="
        timeout 90s swipl -s tests/tests.pl -g "run_integration_tests, halt." || (echo "Integration tests timeout!" && exit 1)

    # üõ°Ô∏è NIVEAU 3: Test dangereux avec triple protection
    - name: Test Game Launch (SAFE MODE)
      timeout-minutes: 1
      run: |
        echo "=== GAME LAUNCH TEST - TRIPLE PROTECTION ==="
        echo "Protection 1: Job timeout (1min)"
        echo "Protection 2: Command timeout (20s)"
        echo "Protection 3: No interactive mode"

        # Test s√©curis√© - chargement uniquement
        timeout 20s swipl -s src/interface.pl -g "
          write('=== INTERFACE MODULE TEST ==='), nl,
          write('Loading pieces.pl...'), nl,
          (consult('src/pieces') -> write('‚úì pieces.pl loaded') ; write('‚úó pieces.pl failed')), nl,
          write('Loading board.pl...'), nl,
          (consult('src/board') -> write('‚úì board.pl loaded') ; write('‚úó board.pl failed')), nl,
          write('Loading game.pl...'), nl,
          (consult('src/game') -> write('‚úì game.pl loaded') ; write('‚úó game.pl failed')), nl,
          write('=== ALL MODULES LOADED SUCCESSFULLY ==='), nl,
          halt(0)
        " || (echo "Game launch test timeout - this is expected and safe!" && exit 0)

    # üõ°Ô∏è MONITORING: Collecte m√©triques pour analyse
    - name: Performance Monitoring
      if: always()  # Toujours ex√©cuter m√™me si tests √©chouent
      timeout-minutes: 1
      run: |
        echo "=== PERFORMANCE METRICS ==="
        echo "Workflow duration: $(date)"
        echo "Memory usage:"
        free -h || echo "Memory info unavailable"
        echo "Process list:"
        ps aux | head -10 || echo "Process info unavailable"
        echo "=== END METRICS ==="